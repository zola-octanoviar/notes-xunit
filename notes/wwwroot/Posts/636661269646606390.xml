<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Build a C# Hello World application with .NET Core in Visual Studio 2017</title>
  <slug>build-a-c-hello-world-application-with-net-core-in-visual-studio-2017</slug>
  <pubDate>2018-07-02 11:16:45</pubDate>
  <lastModified>2018-07-02 11:18:29</lastModified>
  <excerpt>&lt;p style="margin-top: 1rem; margin-bottom: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;This topic provides a step-by-step introduction to building, debugging, and publishing a simple .NET Core console application using C# in Visual Studio 2017. Visual Studio 2017 provides a full-featured development environment for building .NET Core applications. As long as the application doesn't have platform-specific dependencie</excerpt>
  <content>&lt;p style="margin-top: 1rem; margin-bottom: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;This topic provides a step-by-step introduction to building, debugging, and publishing a simple .NET Core console application using C# in Visual Studio 2017. Visual Studio 2017 provides a full-featured development environment for building .NET Core applications. As long as the application doesn't have platform-specific dependencies, the application can run on any platform that .NET Core targets and on any system that has .NET Core installed.&lt;/p&gt;
&lt;h2 id="prerequisites" class="heading-with-anchor" style="line-height: 1.3; margin-bottom: 12px; margin-top: 32px; font-size: 1.75rem; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif;"&gt;Prerequisites&lt;/h2&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;&lt;a style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://aka.ms/vsdownload?utm_source=mscom&amp;amp;utm_campaign=msdocs" data-linktype="external"&gt;Visual Studio 2017&lt;/a&gt;&amp;nbsp;with the ".NET Core cross-platform development" workload installed. You can develop your app with either .NET Core 1.1 or .NET Core 2.0.&lt;/p&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;For more information, see the&amp;nbsp;&lt;a style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/core/windows-prerequisites" data-linktype="relative-path"&gt;Prerequisites for .NET Core on Windows&lt;/a&gt;&amp;nbsp;topic.&lt;/p&gt;
&lt;h2 id="a-simple-hello-world-application" class="heading-with-anchor" style="line-height: 1.3; margin-bottom: 12px; margin-top: 32px; font-size: 1.75rem; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif;"&gt;A simple Hello World application&lt;/h2&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;Begin by creating a simple "Hello World" console application. Follow these steps:&lt;/p&gt;
&lt;ol style="margin: 16px 0px 16px 38px; padding: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;Launch Visual Studio 2017. Select&amp;nbsp;&lt;span style="font-weight: 600;"&gt;File&lt;/span&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;span style="font-weight: 600;"&gt;New&lt;/span&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Project&lt;/span&gt;&amp;nbsp;from the menu bar. In the&amp;nbsp;&lt;em&gt;New Project&lt;/em&gt;* dialog, select the&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Visual C#&lt;/span&gt;&amp;nbsp;node followed by the&amp;nbsp;&lt;span style="font-weight: 600;"&gt;.NET Core&lt;/span&gt;&amp;nbsp;node. Then select the&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Console App (.NET Core)&lt;/span&gt;project template. In the&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Name&lt;/span&gt;&amp;nbsp;text box, type "HelloWorld". Select the&amp;nbsp;&lt;span style="font-weight: 600;"&gt;OK&lt;/span&gt;&amp;nbsp;button.&lt;/p&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;&lt;img style="border: 0px; max-width: 100%; height: auto; display: inline-block;" src="https://docs.microsoft.com/en-us/dotnet/core/tutorials/media/with-visual-studio/newproject.png" alt="New Project dialog with Console App selected" data-linktype="relative-path" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;Visual Studio uses the template to create your project. The C# Console Application template for .NET Core automatically defines a class,&amp;nbsp;&lt;code style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.8rem; border-radius: 2px; display: inline-block; padding: 3px 7px; border: 1px solid #d3d6db; background-color: #f9f9f9; direction: ltr;"&gt;Program&lt;/code&gt;, with a single method,&amp;nbsp;&lt;code style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.8rem; border-radius: 2px; display: inline-block; padding: 3px 7px; border: 1px solid #d3d6db; background-color: #f9f9f9; direction: ltr;"&gt;Main&lt;/code&gt;, that takes a&amp;nbsp;&lt;a class="xref" style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/api/system.string" data-linktype="absolute-path"&gt;String&lt;/a&gt;&amp;nbsp;array as an argument.&amp;nbsp;&lt;code style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.8rem; border-radius: 2px; display: inline-block; padding: 3px 7px; border: 1px solid #d3d6db; background-color: #f9f9f9; direction: ltr;"&gt;Main&lt;/code&gt;&amp;nbsp;is the application entry point, the method that's called automatically by the runtime when it launches the application. Any command-line arguments supplied when the application is launched are available in the&amp;nbsp;&lt;em&gt;args&lt;/em&gt;&amp;nbsp;array.&lt;/p&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;&lt;img style="border: 0px; max-width: 100%; height: auto; display: inline-block;" src="https://docs.microsoft.com/en-us/dotnet/core/tutorials/media/with-visual-studio/devenv.png" alt="Visual Studio and the new HelloWorld project" data-linktype="relative-path" /&gt;&lt;/p&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;The template creates a simple "Hello World" application. It calls the&amp;nbsp;&lt;a class="xref" style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/api/system.console.writeline#System_Console_WriteLine_System_String_" data-linktype="absolute-path"&gt;Console.WriteLine(String)&lt;/a&gt;&amp;nbsp;method to display the literal string "Hello World!" in the console window. By selecting the&amp;nbsp;&lt;span style="font-weight: 600;"&gt;HelloWorld&lt;/span&gt;&amp;nbsp;button with the green arrow on the toolbar, you can run the program in Debug mode. If you do, the console window is visible for only a brief time interval before it closes. This occurs because the&amp;nbsp;&lt;code style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.8rem; border-radius: 2px; display: inline-block; padding: 3px 7px; border: 1px solid #d3d6db; background-color: #f9f9f9; direction: ltr;"&gt;Main&lt;/code&gt;&amp;nbsp;method terminates and the application ends as soon as the single statement in the&amp;nbsp;&lt;code style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.8rem; border-radius: 2px; display: inline-block; padding: 3px 7px; border: 1px solid #d3d6db; background-color: #f9f9f9; direction: ltr;"&gt;Main&lt;/code&gt;&amp;nbsp;method executes.&lt;/p&gt;
&lt;/li&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;To cause the application to pause before it closes the console window, add the following code immediately after the call to the&amp;nbsp;&lt;a class="xref" style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/api/system.console.writeline#System_Console_WriteLine_System_String_" data-linktype="absolute-path"&gt;Console.WriteLine(String)&lt;/a&gt;&amp;nbsp;method:&lt;/p&gt;
&lt;div class="codeHeader" style="background-color: #f5f5f5; color: #707070; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; font-size: 0.8rem; border-bottom: 0px; margin-top: 16px; min-height: 30px;" data-bi-name="code-header"&gt;&lt;span class="language" style="padding: 2px 16px; -webkit-box-flex: 1; flex-grow: 1;"&gt;C#&lt;/span&gt;&lt;button class="action copy" style="font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; font-family: inherit; margin: 0px; color: #707070; overflow: visible; cursor: pointer; padding-top: 2px; padding-right: 10px; padding-left: 10px; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-color: #e0e0e0; display: flex; -webkit-box-align: center; align-items: center;" data-bi-name="copy"&gt;Copy&lt;/button&gt;&lt;/div&gt;
&lt;pre style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; border: 1px solid #d3d6db; background-color: #f9f9f9; font-size: 0.875rem; overflow: auto; padding: 16px; margin-top: 0px; margin-bottom: 0px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; hyphens: none;"&gt;&lt;code class="lang-csharp" style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.875rem; border-radius: 2px; display: block; padding: 0px; border: 0px; direction: ltr;"&gt;Console.Write(&lt;span class="hljs-string" style="color: #a31515;"&gt;"Press any key to continue..."&lt;/span&gt;);
Console.ReadKey(&lt;span class="hljs-literal" style="color: #07704a;"&gt;true&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;This code prompts the user to press any key and then pauses the program until a key is pressed.&lt;/p&gt;
&lt;/li&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;On the menu bar, select&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Build&lt;/span&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Build Solution&lt;/span&gt;. This compiles your program into an intermediate language (IL) that's converted into binary code by a just-in-time (JIT) compiler.&lt;/p&gt;
&lt;/li&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;Run the program by selecting the&amp;nbsp;&lt;span style="font-weight: 600;"&gt;HelloWorld&lt;/span&gt;&amp;nbsp;button with the green arrow on the toolbar.&lt;/p&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;&lt;img style="border: 0px; max-width: 100%; height: auto; display: inline-block;" src="https://docs.microsoft.com/en-us/dotnet/core/tutorials/media/with-visual-studio/helloworld1.png" alt="Console window showing Hello World Press any key to continue" data-linktype="relative-path" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;Press any key to close the console window.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="enhancing-the-hello-world-application" class="heading-with-anchor" style="line-height: 1.3; margin-bottom: 12px; margin-top: 32px; font-size: 1.75rem; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif;"&gt;Enhancing the Hello World application&lt;/h2&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;Enhance your application to prompt the user for their name and display it along with the date and time. To modify and test the program, do the following:&lt;/p&gt;
&lt;ol style="margin: 16px 0px 16px 38px; padding: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;Enter the following C# code in the code window immediately after the opening bracket that follows the&amp;nbsp;&lt;code style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.8rem; border-radius: 2px; display: inline-block; padding: 3px 7px; border: 1px solid #d3d6db; background-color: #f9f9f9; direction: ltr;"&gt;static void Main(string[] args)&lt;/code&gt;&amp;nbsp;line and before the first closing bracket:&lt;/p&gt;
&lt;div class="codeHeader" style="background-color: #f5f5f5; color: #707070; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; font-size: 0.8rem; border-bottom: 0px; margin-top: 16px; min-height: 30px;" data-bi-name="code-header"&gt;&lt;span class="language" style="padding: 2px 16px; -webkit-box-flex: 1; flex-grow: 1;"&gt;C#&lt;/span&gt;&lt;button class="action copy" style="font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; font-family: inherit; margin: 0px; color: #707070; overflow: visible; cursor: pointer; padding-top: 2px; padding-right: 10px; padding-left: 10px; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-color: #e0e0e0; display: flex; -webkit-box-align: center; align-items: center;" data-bi-name="copy"&gt;Copy&lt;/button&gt;&lt;/div&gt;
&lt;pre style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; border: 1px solid #d3d6db; background-color: #f9f9f9; font-size: 0.875rem; overflow: auto; padding: 16px; margin-top: 0px; margin-bottom: 0px; direction: ltr; word-spacing: normal; word-break: normal; word-wrap: normal; tab-size: 4; hyphens: none;"&gt;&lt;code class="lang-csharp" style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.875rem; border-radius: 2px; display: block; padding: 0px; border: 0px; direction: ltr;" data-src="https://github.com/dotnet/samples/blob/live/snippets/csharp/getting_started/with_visual_studio/helloworld.cs"&gt;Console.WriteLine(&lt;span class="hljs-string" style="color: #a31515;"&gt;"\nWhat is your name? "&lt;/span&gt;);
&lt;span class="hljs-keyword" style="color: #0101fd;"&gt;var&lt;/span&gt; name = Console.ReadLine();
&lt;span class="hljs-keyword" style="color: #0101fd;"&gt;var&lt;/span&gt; date = DateTime.Now;
Console.WriteLine(&lt;span class="hljs-string" style="color: #a31515;"&gt;$"\nHello, &lt;span class="hljs-subst"&gt;{name}&lt;/span&gt;, on &lt;span class="hljs-subst"&gt;{date:d}&lt;/span&gt; at &lt;span class="hljs-subst"&gt;{date:t}&lt;/span&gt;!"&lt;/span&gt;);
Console.Write(&lt;span class="hljs-string" style="color: #a31515;"&gt;"\nPress any key to exit..."&lt;/span&gt;);
Console.ReadKey(&lt;span class="hljs-literal" style="color: #07704a;"&gt;true&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;This code replaces the existing&amp;nbsp;&lt;a class="xref" style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/api/system.console.writeline" data-linktype="absolute-path"&gt;Console.WriteLine&lt;/a&gt;,&amp;nbsp;&lt;a class="xref" style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/api/system.console.write" data-linktype="absolute-path"&gt;Console.Write&lt;/a&gt;, and&amp;nbsp;&lt;a class="xref" style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/api/system.console.readkey" data-linktype="absolute-path"&gt;Console.ReadKey&lt;/a&gt;&amp;nbsp;statements.&lt;/p&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;&lt;img style="border: 0px; max-width: 100%; height: auto; display: inline-block;" src="https://docs.microsoft.com/en-us/dotnet/core/tutorials/media/with-visual-studio/codewindow.png" alt="Visual Studio Program c-sharp file with updated Main method" data-linktype="relative-path" /&gt;&lt;/p&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;This code displays "What is your name?" in the console window and waits until the user enters a string followed by the Enter key. It stores this string into a variable named&amp;nbsp;&lt;code style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.8rem; border-radius: 2px; display: inline-block; padding: 3px 7px; border: 1px solid #d3d6db; background-color: #f9f9f9; direction: ltr;"&gt;name&lt;/code&gt;. It also retrieves the value of the&amp;nbsp;&lt;a class="xref" style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/api/system.datetime.now#System_DateTime_Now" data-linktype="absolute-path"&gt;DateTime.Now&lt;/a&gt;&amp;nbsp;property, which contains the current local time, and assigns it to a variable named&amp;nbsp;&lt;code style="line-height: 19px; -webkit-font-smoothing: auto; font-family: monospace, monospace; font-size: 0.8rem; border-radius: 2px; display: inline-block; padding: 3px 7px; border: 1px solid #d3d6db; background-color: #f9f9f9; direction: ltr;"&gt;date&lt;/code&gt;. Finally, it uses an&amp;nbsp;&lt;a style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated" data-linktype="relative-path"&gt;interpolated string&lt;/a&gt;&amp;nbsp;to display these values in the console window.&lt;/p&gt;
&lt;/li&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;Compile the program by choosing&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Build&lt;/span&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Build Solution&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;Run the program in Debug mode in Visual Studio by selecting the green arrow on the toolbar, pressing F5, or choosing the&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Debug&lt;/span&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;span style="font-weight: 600;"&gt;Start Debugging&lt;/span&gt;&amp;nbsp;menu item. Respond to the prompt by entering a name and pressing the Enter key.&lt;/p&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;&lt;img style="border: 0px; max-width: 100%; height: auto; display: inline-block;" src="https://docs.microsoft.com/en-us/dotnet/core/tutorials/media/with-visual-studio/helloworld2.png" alt="Console window with modified program output" data-linktype="relative-path" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li style="list-style: decimal outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;Press any key to close the console window.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;You've created and run your application. To develop a professional application, take some additional steps to make your application ready for release:&lt;/p&gt;
&lt;ul style="margin: 16px 0px 16px 38px; padding: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;
&lt;li style="list-style: disc outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;For information on debugging your application, see&amp;nbsp;&lt;a style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/core/tutorials/debugging-with-visual-studio" data-linktype="relative-path"&gt;Debugging your C# Hello World application with Visual Studio 2017&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li style="list-style: disc outside none;"&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px;"&gt;For information on developing and publishing a distributable version of your application, see&amp;nbsp;&lt;a style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/core/tutorials/publishing-with-visual-studio" data-linktype="relative-path"&gt;Publishing your C# Hello World application with Visual Studio 2017&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="related-topics" class="heading-with-anchor" style="line-height: 1.3; margin-bottom: 12px; margin-top: 32px; font-size: 1.75rem; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif;"&gt;Related topics&lt;/h2&gt;
&lt;p style="margin-top: 1rem; margin-bottom: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;Instead of a console application, you can also build a class library with .NET Core and Visual Studio 2017. For a step-by-step introduction, see&amp;nbsp;&lt;a style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/core/tutorials/library-with-visual-studio" data-linktype="relative-path"&gt;Building a class library with C# and .NET Core in Visual Studio 2017&lt;/a&gt;.&lt;/p&gt;
&lt;p class="" style="margin-top: 1rem; margin-bottom: 0px; font-family: 'Segoe UI', SegoeUI, 'Segoe WP', 'Helvetica Neue', Helvetica, Tahoma, Arial, sans-serif; font-size: 16px;"&gt;You can also develop a .NET Core console app on Mac, Linux, and Windows by using&amp;nbsp;&lt;a style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://code.visualstudio.com/" data-linktype="external"&gt;Visual Studio Code&lt;/a&gt;, a downloadable code editor. For a step-by-step tutorial, see&amp;nbsp;&lt;a style="background-color: transparent; color: #0078d7; cursor: pointer; word-wrap: break-word;" href="https://docs.microsoft.com/en-us/dotnet/core/tutorials/with-visual-studio-code" data-linktype="relative-path"&gt;Getting Started with Visual Studio Code&lt;/a&gt;.&lt;/p&gt;</content>
  <ispublished>true</ispublished>
  <categories>
    <category>c#</category>
    <category>programming</category>
  </categories>
  <comments></comments>
</post>